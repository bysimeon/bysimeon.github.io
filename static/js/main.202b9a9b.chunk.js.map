{"version":3,"sources":["components/nowListening/index.js","components/styleSwitcher/index.js","components/home/index.js","components/about/index.js","components/work/index.js","components/shop/index.js","components/start/time/index.js","components/start/search/index.js","components/start/weather/index.js","components/start/help/index.js","components/start/index.js","components/music/artists/index.js","components/music/albums/index.js","components/music/tracks/index.js","components/music/recents/index.js","components/music/index.js","components/else/index.js","components/error/index.js","app.js","serviceWorker.js","index.js"],"names":["user","NowListening","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","playing","songName","songUrl","artistName","artistUrl","notScrobbling","userProfile","_this2","xhr","XMLHttpRequest","open","apibase","onload","readyState","status","json","JSON","parse","responseText","recenttracks","track","name","artist","length","includes","substr","indexOf","setState","url","send","_this3","nowPlaying","setInterval","react_default","a","createElement","className","id","Link","to","href","Component","StyleSwitcher","width","height","viewBox","xmlns","transform","d","fill","props","textColor","Home","Helmet","About","draggable","data-src","alt","Work","Shop","monthNames","dayNames","Time","date","time","Date","min","getMinutes","sec","getSeconds","hour","getHours","day","getDate","month","getMonth","getTime","isUrl","RegExp","Search","inputChange","text","currentText","target","value","trim","toLowerCase","key","checkSearchEngines","enterPressed","e","keyCode","searchMod","bookmark","search","test","searchEngine","background","color","searching","match","window","searchEngines","checkBookmarks","bookmarks","fieldStyle","modeStyle","searchClass","style","type","onChange","bind","onKeyUp","Weather","latitude","longitude","temperature","description","navigator","geolocation","getCurrentPosition","position","coords","main","temp","toFixed","weather","getLocation","getWeather","Help","Start","help","Artist","classes","selected","selectedID","artistID","hovered","hoveredID","onClick","selectArtist","onMouseOver","hoverArtist","artistid","playcount","Album","album","Track","console","log","Recent","unixTimestamp","timespanConvert","7","30","90","180","365","???","Music","timespan","limit","topArtists","topTracks","topAlbums","recentTracks","userInfo","selectedArtist","selectedArtistID","hoveredArtist","hoveredArtistID","updateTimespan","assertThisInitialized","event","updateData","t","dt","milliseconds","days","Math","floor","hours","minutes","round","toString","getAttribute","request","getJSON","artists","albums","tracks","recents","topartists","map","push","music_artists","mbid","topalbums","music_albums","toptracks","parseInt","music_tracks","music_recents","uts","replace","total","Else","Error","routeHome","home","routeAbout","about","routeWork","work","routeShop","shop","routeStart","start","routeMusic","music","routeError","error","routeElse","components_else","App","colorMode","backgroundColor","colorSchemes","themes","selectedStyle","BrowserRouter","styleSwitcher","changeStyles","NavLink","exact","activeClassName","nowListening","Switch","Route","path","component","Boolean","location","hostname","ReactDOM","render","src_app","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.202b9a9b.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\nimport \"./style.scss\"\n\nconst apikey = \"a7f8dd0989ae6f42d1be2c4427767c6f\"\nconst apibase = \"https://ws.audioscrobbler.com/2.0/\"\nconst user = \"theblindlookout\"\n\nclass NowListening extends Component {\n    constructor() {\n        super()\n        this.state = {\n            playing: null,\n            songName: null,\n            songUrl: null,\n            artistName: null,\n            artistUrl: null,\n            notScrobbling: \"nothing, but recently heard\",\n            userProfile: \"https://www.last.fm/user/\" + user\n        }\n    }\n\n    nowPlaying() {\n        let xhr = new XMLHttpRequest()\n        xhr.open(\n            \"GET\",\n            apibase +\n                \"?method=user.getrecenttracks&user=\" +\n                user +\n                \"&api_key=\" +\n                apikey +\n                \"&format=json\"\n        )\n        xhr.onload = () => {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    let json = JSON.parse(xhr.responseText)\n                    let songName = json.recenttracks.track[0].name\n                    let artistName = json.recenttracks.track[0].artist[\"#text\"]\n                    let playing\n                    if (\n                        typeof json.recenttracks.track[0][\"@attr\"] ===\n                        \"undefined\"\n                    ) {\n                        playing = false\n                    } else {\n                        playing = true\n                    }\n                    if (songName.length >= 50) {\n                        if (songName.includes(\"(f\")) {\n                            songName = songName.substr(\n                                0,\n                                songName.indexOf(\" (f\")\n                            )\n                        } else {\n                            songName = songName.substr(0, 50) + \"...\"\n                        }\n                    }\n                    if (playing) {\n                        this.setState({\n                            playing: playing,\n                            songName: songName,\n                            artistName: artistName,\n                            songUrl: json.recenttracks.track[0].url,\n                            artistUrl: \"https://www.last.fm/music/\" + artistName\n                        })\n                    } else {\n                        this.setState({\n                            playing: false,\n                            songName: null,\n                            artistName: null,\n                            songUrl: null,\n                            artistUrl: null\n                        })\n                    }\n                }\n            }\n        }\n        xhr.send()\n    }\n\n    componentDidMount() {\n        this.nowPlaying()\n        setInterval(() => {\n            this.nowPlaying()\n        }, 500)\n    }\n\n    render() {\n        return (\n            <div className=\"corner\" id=\"song\">\n                <Link to='/music/' className=\"hidden-link\">\n                    {\" \"}\n                    listening to:&nbsp;\n                </Link>\n\n                {this.state.playing && (\n                    <span>\n                        <a id=\"songName\" href={this.state.songUrl}>\n                            {\" \"}\n                            {this.state.songName}{\" \"}\n                        </a>\n                        <span id=\"filler\"> by </span>\n                        <a id=\"artistName\" href={this.state.artistUrl}>\n                            {\" \"}\n                            {this.state.artistName}\n                        </a>\n                    </span>\n                )}\n\n                {this.state.playing === false && (\n                    <span>\n                        <Link id=\"notScrobbling\" to=\"/music/\">\n                            {this.state.notScrobbling}\n                        </Link>\n                    </span>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default NowListening\n","import React, { Component } from \"react\"\nimport \"./style.scss\"\n\nclass StyleSwitcher extends Component {\n    constructor() {\n        super()\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <svg\n                className=\"logo\"\n                width=\"600\"\n                height=\"600\"\n                viewBox=\"0 0 600 600\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                // onClick={this.props.changeStyles}\n            >\n                <g transform=\"translate(300,300)\">\n                    <path\n                        d=\"M133.3,-213.4C167.1,-185.7,185,-139.2,202,-94.4C219,-49.7,235.2,-6.8,238.6,40.9C241.9,88.5,232.4,140.8,203.2,178C174,215.1,125,237.1,76.4,243.9C27.8,250.7,-20.5,242.4,-62,224.2C-103.5,206.1,-138.3,178,-166.6,144.7C-194.9,111.4,-216.7,72.9,-220.5,33C-224.2,-6.9,-209.9,-48.1,-194.6,-91.8C-179.2,-135.5,-162.9,-181.8,-130.3,-210C-97.7,-238.3,-48.8,-248.7,0.5,-249.4C49.7,-250.1,99.5,-241.1,133.3,-213.4Z\"\n                        fill={this.props.textColor}\n                    />\n                </g>\n            </svg>\n        )\n    }\n}\n\nexport default StyleSwitcher\n","import React, { Component } from \"react\"\nimport { Helmet } from \"react-helmet\";\nimport \"./style.scss\"\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"container container--home\">\n                <Helmet>\n                    <title>bysimeon</title>\n                </Helmet>\n                <div className=\"bigbigtext\">\n                    <span>bysimeon</span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport \"./style.scss\"\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"container container--about\">\n                <Helmet>\n                    <title>about &ndash; bysimeon</title>\n                </Helmet>\n                <div className=\"textbox\">\n                    <p className=\"medmedtext medmedtext--about\">\n                        {\" \"}\n                        simeon, a computer science and psychology student at\n                        northwestern university{\" \"}\n                    </p>\n                    <ul className=\"notsmalltext\">\n                        <li> developer </li>\n                        <li> designer </li>\n                        <li> researcher </li>\n                    </ul>\n                    <p className=\"about-links\">\n                        contact:{\" \"}\n                        <a href=\"mailto:mail@bysimeon.com\">mail@bysimeon.com</a>\n                        <br /> pull request:{\" \"}\n                        <a href=\"https://github.com/bysimeon\">\n                            github/bysimeon\n                        </a>\n                        <br /> listen:{\" \"}\n                        <a href=\"https://www.last.fm/user/theblindlookout\">\n                            {\" \"}\n                            last.fm/thblndlkt\n                        </a>{\" \"}\n                        &{\" \"}\n                        <a href=\"https://soundcloud.com/bysimeon\">\n                            soundcloud/&!\n                        </a>\n                        <br /> collect:{\" \"}\n                        <a href=\"https://www.are.na/s\">are.na/s*</a>\n                        <br /> ride:{\" \"}\n                        <a href=\"https://www.pedalroom.com/bike/-38950\">\n                            pedal/438672\n                        </a>\n                    </p>\n                </div>\n                <img\n                    draggable=\"false\"\n                    className=\"lazy drawing\"\n                    data-src=\"/assets/photos/me2.png\"\n                    alt=\"\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default About\n","import React, { Component } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport \"./style.scss\"\n\nclass Work extends Component {\n    render() {\n        return (\n            <div className=\"container container--work\">\n                <Helmet>\n                    <title>work &ndash; bysimeon</title>\n                </Helmet>\n                <p className=\"medmedtext\">\n                    {\" \"}\n                    some <span className=\"personal filter\">\n                        personal\n                    </span> some <span className=\"paid filter\">paid</span> some{\" \"}\n                    <span className=\"unfinished filter\">unfinished</span>\n                </p>\n                <ul className=\"projects\">\n                    <li className=\"paid\">\n                        the highly [w/\n                        <a href=\"https://teahkbrands.com\"> teah</a>] |{\" \"}\n                        <a href=\"https://www.thehighly.co\">live</a>\n                    </li>\n                    <li className=\"personal\">\n                        startpage | <a href=\"/start/\">live</a>{\" \"}\n                        <a href=\"https://github.com/bysimeon/startpage\">repo</a>\n                    </li>\n                    <li className=\"unfinished\">\n                        tiilt lab |{\" \"}\n                        <a href=\"http://tiilt.northwestern.edu/\">live</a>\n                    </li>\n                    <li className=\"paid\">\n                        storymapjs [w/\n                        <a href=\"https://knightlab.northwestern.edu/\">\n                            knight lab\n                        </a>\n                        ] | <a href=\"https://storymap.knightlab.com/\">live</a>{\" \"}\n                        <a href=\"https://github.com/NUKnightLab/StoryMapJS\">\n                            repo\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Work\n","import React, { Component } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport \"./style.scss\"\n\nclass Shop extends Component {\n    render() {\n        return (\n            <div className=\"container container--shop\">\n                <Helmet>\n                    <title>shop &ndash; bysimeon</title>\n                </Helmet>\n                <div className=\"mediumtext\">\n                    <span className=\"uppercase\">for sale</span>\n                </div>\n                <section className=\"item left-pic\" id=\"item1\">\n                    <div className=\"image\">\n                        <img\n                            draggable=\"false\"\n                            className=\"img-hor lazy\"\n                            data-src=\"/assets/photos/shop/item1/item1.svg\"\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"description\">\n                        <h1>shirts with pictures</h1>\n                        <p>\n                            {\" \"}\n                            shirts with pictures i take on em, color\n                            coordinated! shirts with pictures i take on em,\n                            color coordinated!\n                        </p>\n                        <ul>\n                            <li> soft cotton</li>\n                            <li> looks good dirty</li>\n                            <li> pre-shrunk</li>\n                        </ul>\n                        <div className=\"not-a-button\">shirt size</div>\n                        <div className=\"horizontal-buttons\">\n                            <button>s</button>\n                            <button>m</button>\n                            <button>l</button>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default Shop\n","import React, { Component } from \"react\"\nimport \"./style.scss\"\n\nconst monthNames = [\n    \"january\",\n    \"february\",\n    \"march\",\n    \"april\",\n    \"may\",\n    \"june\",\n    \"july\",\n    \"august\",\n    \"september\",\n    \"october\",\n    \"november\",\n    \"december\"\n]\n\nconst dayNames = [\n    \"\",\n    \"first\",\n    \"second\",\n    \"third\",\n    \"fourth\",\n    \"fifth\",\n    \"sixth\",\n    \"seventh\",\n    \"eighth\",\n    \"ninth\",\n    \"tenth\",\n    \"eleventh\",\n    \"twelfth\",\n    \"thirteenth\",\n    \"fourteenth\",\n    \"fiftheenth\",\n    \"sixteenth\",\n    \"seventeenth\",\n    \"eighteenth\",\n    \"nineteenth\",\n    \"twentyith\",\n    \"twentyfirst\",\n    \"twenysecond\",\n    \"twentythird\",\n    \"twenyfourth\",\n    \"twenyfifth\",\n    \"twenysixth\",\n    \"twenysevenph\",\n    \"twenyayth\",\n    \"twenyninth\",\n    \" thirtyith\",\n    \"thirtyfirst\"\n]\n\n// window.onload = () => {\n//     document.getElementById(\"clock\").innerHTML = getTime()\n//     document.getElementById(\"date\").innerHTML = getDay()\n\n//     setInterval(() => {\n//         document.getElementById(\"clock\").innerHTML = getTime()\n//         document.getElementById(\"date\").innerHTML = getDay()\n//     }, 100)\n// }\n\nclass Time extends Component {\n    constructor() {\n        super()\n        this.state = {\n            date: null,\n            time: null\n        }\n    }\n    getTime() {\n        let date = new Date(),\n            min = date.getMinutes(),\n            sec = date.getSeconds(),\n            hour = date.getHours()\n\n        this.setState({\n            time:\n                \"\" +\n                (hour < 10 ? \"0\" + hour : hour) +\n                \":\" +\n                (min < 10 ? \"0\" + min : min) +\n                \":\" +\n                (sec < 10 ? \"0\" + sec : sec)\n        })\n    }\n\n    getDate() {\n        let date = new Date(),\n            day = dayNames[date.getDate()],\n            month = monthNames[date.getMonth()]\n        this.setState({\n            date: month + \" \" + day\n        })\n    }\n\n    componentDidMount() {\n        this.getTime()\n        this.getDate()\n        setInterval(() => {\n            this.getTime()\n            this.getDate()\n        }, 100)\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"clock\"> {this.state.time} </div>\n                <div className=\"date\"> {this.state.date} </div>\n            </div>\n        )\n    }\n}\n\nexport default Time\n","import React, { Component } from \"react\"\nimport \"./style.scss\"\nimport bookmarks from \"../../../data/bookmarks.json\"\nimport searchEngines from \"../../../data/searchEngines.json\"\n\nconst isUrl = new RegExp(\n    /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/\n)\n\nclass Search extends Component {\n    constructor() {\n        super()\n        this.state = {\n            currentText: \"\",\n            searchMod: false,\n            searchEngine: \"google\",\n            bookmark: false,\n            key: false,\n            background: false,\n            color: false,\n            url: \"https://google.com/search?q=\",\n            searching: false\n        }\n    }\n\n    inputChange = text => {\n        let currentText = text.target.value.trim().toLowerCase()\n        let key = text.target.value\n            .trim()\n            .substr(0, 2)\n            .toLowerCase()\n        this.setState({\n            currentText: currentText,\n            key: key\n        })\n        this.checkSearchEngines(currentText, key)\n    }\n\n    enterPressed = e => {\n        if (e.keyCode === 13) {\n            if (this.state.searchMod) {\n                if (this.state.bookmark) {\n                    this.search(this.state.url)\n                } else {\n                    this.search(\n                        this.state.url +\n                            this.state.currentText\n                                .substr(this.state.key.length)\n                                .trim()\n                    )\n                }\n            } else if (isUrl.test(this.state.currentText)) {\n                this.setState({\n                    searchEngine: \"url\"\n                })\n                this.search(this.state.currentText)\n            } else {\n                this.search(this.state.url + this.state.currentText)\n            }\n        }\n    }\n\n    search(url) {\n        if (!url.match(/^https?:\\/\\//i)) {\n            url = \"http://\" + url\n        }\n        window.open(url, \"_self\")\n        this.setState({\n            searching: true\n        })\n    }\n\n    checkSearchEngines(text, key) {\n        if (key in searchEngines) {\n            this.setState({\n                searchMod: \"searchEngine\",\n                searchEngine: searchEngines[key][0],\n                url: searchEngines[key][1],\n                background: searchEngines[key][2],\n                color: searchEngines[key][3],\n                key: key\n            })\n        } else if (text.trim().toLowerCase() in searchEngines) {\n            key = text.trim().toLowerCase()\n            this.setState({\n                searchMod: \"searchEngine\",\n                searchEngine: searchEngines[key][0],\n                url: searchEngines[key][1],\n                background: searchEngines[key][2],\n                color: searchEngines[key][3],\n                key: key\n            })\n        } else {\n            this.checkBookmarks(text)\n        }\n    }\n\n    checkBookmarks(text) {\n        if (text.trim().toLowerCase() in bookmarks) {\n            this.setState({\n                searchMod: \"bookmark\",\n                searchEngine: bookmarks[text][0],\n                bookmark: bookmarks[text][0],\n                url: bookmarks[text][1],\n                background: bookmarks[text][2],\n                color: bookmarks[text][3]\n            })\n        } else {\n            this.setState({\n                searchMod: false,\n                searchEngine: \"google\",\n                background: false,\n                bookmark: false,\n                color: false,\n                key: false,\n                url: \"https://google.com/search?q=\"\n            })\n        }\n    }\n\n    render() {\n        let fieldStyle,\n            modeStyle = {}\n        if (this.state.background && this.state.color) {\n            fieldStyle = {\n                background: \"linear-gradient\" + this.state.background\n            }\n            modeStyle = {\n                color: this.state.color\n            }\n        }\n        let searchClass = \"\"\n        if (this.state.searching) {\n            searchClass = \"move-off-right\"\n        }\n        return (\n            <div id=\"inline-search\">\n                <div id=\"search-mode\" className={searchClass} style={modeStyle}>\n                    {this.state.searchEngine} <span className=\"loading\" />\n                </div>\n                <input\n                    className={searchClass}\n                    id=\"search-field\"\n                    type=\"text\"\n                    name=\"search-field\"\n                    onChange={this.inputChange.bind(this)}\n                    onKeyUp={this.enterPressed.bind(this)}\n                    style={fieldStyle}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Search\n","import React, { Component } from \"react\"\nimport \"./style.scss\"\n\nclass Weather extends Component {\n    constructor() {\n        super()\n        this.state = {\n            latitude: null,\n            longitude: null,\n            temperature: null,\n            description: null\n        }\n    }\n\n    getLocation() {\n        if (this.state.latitude === null && this.state.longitude === null) {\n            navigator.geolocation.getCurrentPosition(\n                function(position) {\n                    this.setState({\n                        latitude: position.coords.latitude,\n                        longitude: position.coords.longitude\n                    })\n                }.bind(this)\n            )\n        }\n    }\n\n    getWeather() {\n        if (\n            this.state.temperature === null ||\n            this.state.description === null\n        ) {\n            let xhr = new XMLHttpRequest()\n            xhr.open(\n                \"GET\",\n                \"https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?lat=\" +\n                    this.state.latitude +\n                    \"&lon=\" +\n                    this.state.longitude +\n                    \"&units=Imperial&appid=4119dfca25e96bf1f10f35a975835f6c\"\n            )\n            xhr.onload = () => {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                        let json = JSON.parse(xhr.responseText)\n                        this.setState({\n                            temperature: json.main.temp.toFixed(0),\n                            description: json.weather[0].description\n                        })\n                    }\n                }\n            }\n            xhr.send()\n        }\n    }\n\n    componentDidMount() {\n        this.getLocation()\n        setInterval(() => {\n            this.getWeather()\n        }, 100)\n    }\n\n    render() {\n        return (\n            <div className=\"weather-container\">\n                <div className=\"row\">\n                    <div id=\"weather-description\" className=\"inline\">\n                        {this.state.description}\n                    </div>\n                    <span className=\"inline\">&nbsp; &mdash; &nbsp;</span>\n                    <div id=\"temp\" className=\"inline\">\n                        {this.state.temperature}{\" \"}\n                        {this.state.temperature && <span>&#176;f</span>}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Weather\n","import React, { Component } from \"react\" \nimport \"./style.scss\"\n\nclass Help extends Component {\n    render() {\n        return (\n            <div id=\"command\" className=\"fade\">\n                <div id=\"close1\">\n                </div>\n                <div id=\"command-list\">\n                    press\n                    <span> space </span> to focus the searchbox,\n                    <span> google </span> is used by default. enter a\n                    <span> url </span> to open that webpage. search specific\n                    sites by using one of the following shortcuts before your\n                    query:\n                    <ul>\n                        <li> reddit (r:)</li>\n                        <li>\n                            {\" \"}\n                            subreddits (r/examplesubreddit goes to\n                            examplesubreddit){\" \"}\n                        </li>\n                        <li> youtube (y:) </li>\n                        <li> soundcloud (s:) </li>\n                        <li> translate (t:)</li>\n                        <li> myanimelist (a:)</li>\n                        <li> google drive (d:)</li>\n                        <li> github (g:)</li>\n                        <li> lyrics (l:)</li>\n                        <li> netflix (n:)</li>\n                        <li> unsplash (u:)</li>\n                        <li> localhost (::)</li>\n                    </ul>\n                    press\n                    <span> esc </span> to clear the searchbox and close this\n                    help page.\n                    <br />\n                    <br /> p.s. the song displayed at the bottom right is my\n                    most recent track from\n                    <a href=\"https://www.last.fm/user/theblindlookout\">\n                        last.fm\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Help\n","import React, { Component } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport \"./style.scss\"\n\nimport Time from \"./time\"\nimport Search from \"./search\"\nimport Weather from \"./weather\"\nimport Help from \"./help\"\nclass Start extends Component {\n    render() {\n        return (\n            <div className=\"container container--start\">\n                <Helmet>\n                    <title>launch &ndash; bysimeon</title>\n                </Helmet>\n                <Help />\n                <Time />\n                <Weather />\n                <Search />\n            </div>\n        )\n    }\n}\n\nexport default Start\n","import React, { Component } from \"react\"\nimport \"./styles.scss\"\n\nclass Artist extends Component {\n    render() {\n        let classes = \"music__column__item\"\n        if (\n            this.props.selected === this.props.artist ||\n            (this.props.selectedID === this.props.artistID &&\n                this.props.artistID !== \"\")\n        ) {\n            classes += \" music__column__item--selected\"\n        }\n        if (\n            this.props.hovered === this.props.artist ||\n            (this.props.hoveredID === this.props.artistID &&\n                this.props.artistID !== \"\")\n        ) {\n            classes += \" music__column__item--hovered\"\n        }\n        return (\n            <div\n                className={classes}\n                onClick={this.props.selectArtist}\n                onMouseOver={this.props.hoverArtist}\n                artist={this.props.artist}\n                artistid={this.props.artistID}\n            >\n                <div\n                    className=\"music__column__item__title\"\n                    artist={this.props.artist}\n                    artistid={this.props.artistID}\n                >\n                    {this.props.artist}\n                </div>\n                <div\n                    className=\"music__column__item__plays\"\n                    artist={this.props.artist}\n                    artistid={this.props.artistID}\n                >\n                    {this.props.playcount}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Artist\n","import React, { Component } from \"react\"\nimport \"./styles.scss\"\n\nclass Album extends Component {\n    render() {\n        let classes = \"music__column__item\"\n        if (\n            this.props.selected === this.props.artist ||\n            (this.props.selectedID === this.props.artistID &&\n                this.props.artistID !== \"\")\n        ) {\n            classes += \" music__column__item--selected\"\n        }\n        if (\n            this.props.hovered === this.props.artist ||\n            (this.props.hoveredID === this.props.artistID &&\n                this.props.artistID !== \"\")\n        ) {\n            classes += \" music__column__item--hovered\"\n        }\n        return (\n            <div\n                className={classes}\n                onClick={this.props.selectArtist}\n                onMouseOver={this.props.hoverArtist}\n                artist={this.props.artist}\n                artistid={this.props.artistID}\n            >\n                <div\n                    className=\"music__column__item__title\"\n                    artist={this.props.artist}\n                    artistid={this.props.artistID}\n                >\n                    {this.props.album}\n                </div>\n                <div\n                    className=\"music__column__item__plays\"\n                    artist={this.props.artist}\n                    artistid={this.props.artistID}\n                >\n                    {this.props.playcount}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Album\n","import React, { Component } from \"react\"\nimport \"./styles.scss\"\n\nclass Track extends Component {\n    render() {\n        let classes = \"music__column__item\"\n        if (\n            this.props.selected === this.props.artist ||\n            (this.props.selectedID === this.props.artistID &&\n                this.props.artistID !== \"\")\n        ) {\n            classes += \" music__column__item--selected\"\n        }\n        if (\n            this.props.hovered === this.props.artist ||\n            (this.props.hoveredID === this.props.artistID &&\n                this.props.artistID !== \"\")\n        ) {\n            console.log(classes)\n            classes += \" music__column__item--hovered\"\n        }\n\n        return (\n            <div\n                className={classes}\n                onClick={this.props.selectArtist}\n                onMouseOver={this.props.hoverArtist}\n                artist={this.props.artist}\n                artistid={this.props.artistID}\n            >\n                <div\n                    className=\"music__column__item__title\"\n                    artist={this.props.artist}\n                    artistid={this.props.artistID}\n                >\n                    {this.props.track}\n                </div>\n                <div\n                    className=\"music__column__item__plays\"\n                    artist={this.props.artist}\n                    artistid={this.props.artistID}\n                >\n                    {this.props.playcount}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Track\n","import React, { Component } from \"react\"\nimport \"./styles.scss\"\n\nclass Recent extends Component {\n    render() {\n        return (\n            <div className=\"music__column__item music__column__item--recent\">\n                <div className=\"music__column__item__title\">\n                    {this.props.track} by {this.props.artist}{\" \"}\n                </div>\n                <div className=\"music__column__item__plays\">\n                    {this.props.unixTimestamp(this.props.time)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Recent\n","import React, { Component } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport \"./style.scss\"\n\nimport Artist from \"./artists\"\nimport Album from \"./albums\"\nimport Track from \"./tracks\"\nimport Recent from \"./recents\"\n\nconst apikey = \"a7f8dd0989ae6f42d1be2c4427767c6f\"\nconst apibase = \"https://ws.audioscrobbler.com/2.0/\"\nconst user = \"theblindlookout\"\nconst timespanConvert = {\n    \"7\": \"7day\",\n    \"30\": \"1month\",\n    \"90\": \"3month\",\n    \"180\": \"6month\",\n    \"365\": \"12month\",\n    \"???\": \"overall\"\n}\n\nclass Music extends Component {\n    constructor() {\n        super()\n        this.state = {\n            timespan: \"30\",\n            limit: 50,\n            topArtists: false,\n            topTracks: false,\n            topAlbums: false,\n            recentTracks: false,\n            userInfo: false,\n            selectedArtist: false,\n            selectedArtistID: false,\n            hoveredArtist: false,\n            hoveredArtistID: false\n        }\n        this.updateTimespan = this.updateTimespan.bind(this)\n        this.selectArtist = this.selectArtist.bind(this)\n    }\n\n    updateTimespan(event) {\n        this.setState({\n            timespan: event.target.value\n        })\n        this.updateData(event.target.value)\n    }\n\n    unixTimestamp(t) {\n        if (t === \"now playing\") {\n            return t\n        }\n        var dt = new Date(t * 1000)\n        var nd = new Date()\n        var milliseconds = nd.getTime() - dt.getTime()\n        var days = Math.floor(milliseconds / 86400000) // days\n        var hours = Math.floor((milliseconds % 86400000) / 3600000) // hours\n        var minutes = Math.round(((milliseconds % 86400000) % 3600000) / 60000) // minutes\n        if (days > 0) {\n            if (days > 1) {\n                return days.toString() + \" days ago\"\n            } else {\n                return days.toString() + \" day ago\"\n            }\n        } else if (hours > 0) {\n            if (hours > 1) {\n                return hours.toString() + \" hours ago\"\n            } else {\n                return hours.toString() + \" hour ago\"\n            }\n        } else {\n            if (minutes > 1) {\n                return minutes.toString() + \" mins ago\"\n            } else {\n                return minutes.toString() + \" min ago\"\n            }\n        }\n    }\n\n    selectArtist(e) {\n        this.setState({\n            selectedArtist: e.target.getAttribute(\"artist\"),\n            selectedArtistID: e.target.getAttribute(\"artistid\")\n        })\n    }\n\n    hoverArtist(e) {\n        this.setState({\n            hoveredArtist: e.target.getAttribute(\"artist\"),\n            hoveredArtistID: e.target.getAttribute(\"artistid\")\n        })\n    }\n\n    getJSON(request, time) {\n        let xhr = new XMLHttpRequest()\n        xhr.open(\n            \"GET\",\n            apibase +\n                \"?method=user.\" +\n                request +\n                \"&user=\" +\n                user +\n                \"&period=\" +\n                timespanConvert[time] +\n                \"&limit=\" +\n                this.state.limit +\n                \"&api_key=\" +\n                apikey +\n                \"&format=json\"\n        )\n        xhr.onload = () => {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    switch (request) {\n                        case \"gettopartists\":\n                            this.setState({\n                                topArtists: JSON.parse(xhr.responseText)\n                            })\n                            break\n                        case \"gettoptracks\":\n                            this.setState({\n                                topTracks: JSON.parse(xhr.responseText)\n                            })\n                            break\n                        case \"gettopalbums\":\n                            this.setState({\n                                topAlbums: JSON.parse(xhr.responseText)\n                            })\n                            break\n                        case \"getinfo\":\n                            this.setState({\n                                userInfo: JSON.parse(xhr.responseText)\n                            })\n                            break\n                        case \"getrecenttracks\":\n                            this.setState({\n                                recentTracks: JSON.parse(xhr.responseText)\n                            })\n                            break\n                        default:\n                            break\n                    }\n                }\n            }\n        }\n        xhr.send()\n    }\n\n    updateData(time) {\n        if (!time) {\n            time = this.state.timespan\n            this.getJSON(\"getinfo\", time)\n        }\n        this.getJSON(\"gettopartists\", time)\n        this.getJSON(\"gettoptracks\", time)\n        this.getJSON(\"gettopalbums\", time)\n        this.getJSON(\"getrecenttracks\", time)\n    }\n\n    componentDidMount() {\n        this.updateData()\n    }\n\n    render() {\n        let artists = []\n        let albums = []\n        let tracks = []\n        let recents = []\n        let trackplays = 0\n\n        if (\n            this.state.topArtists &&\n            this.state.topTracks &&\n            this.state.topAlbums &&\n            this.state.recentTracks\n        ) {\n            this.state.topArtists.topartists.artist.map(artist => {\n                artists.push(\n                    <Artist\n                        artist={artist.name}\n                        artistID={artist.mbid}\n                        playcount={artist.playcount}\n                        url={artist.url}\n                        key={artist.name}\n                        selected={this.state.selectedArtist}\n                        selectedID={this.state.selectedArtistID}\n                        selectArtist={this.selectArtist.bind(this)}\n                        hovered={this.state.hoveredArtist}\n                        hoveredID={this.state.hoveredArtistID}\n                        hoverArtist={this.hoverArtist.bind(this)}\n                    />\n                )\n            })\n\n            this.state.topAlbums.topalbums.album.map(album => {\n                albums.push(\n                    <Album\n                        album={album.name}\n                        artistID={album.artist.mbid}\n                        artist={album.artist.name}\n                        playcount={album.playcount}\n                        url={album.url}\n                        key={album.name + album.artist}\n                        selected={this.state.selectedArtist}\n                        selectedID={this.state.selectedArtistID}\n                        selectArtist={this.selectArtist.bind(this)}\n                        hovered={this.state.hoveredArtist}\n                        hoveredID={this.state.hoveredArtistID}\n                        hoverArtist={this.hoverArtist.bind(this)}\n                    />\n                )\n            })\n\n            this.state.topTracks.toptracks.track.map(track => {\n                trackplays += parseInt(track.playcount)\n                tracks.push(\n                    <Track\n                        track={track.name}\n                        artistID={track.artist.mbid}\n                        artist={track.artist.name}\n                        playcount={track.playcount}\n                        url={track.url}\n                        key={track.name + track.artist.name}\n                        selected={this.state.selectedArtist}\n                        selectedID={this.state.selectedArtistID}\n                        selectArtist={this.selectArtist.bind(this)}\n                        hovered={this.state.hoveredArtist}\n                        hoveredID={this.state.hoveredArtistID}\n                        hoverArtist={this.hoverArtist.bind(this)}\n                    />\n                )\n            })\n\n            this.state.recentTracks.recenttracks.track.map(track => {\n                if (track.date) {\n                    recents.push(\n                        <Recent\n                            track={track.name}\n                            artistID={track.artist.mbid}\n                            artist={track.artist[\"#text\"]}\n                            playcount={track.playcount}\n                            url={track.url}\n                            key={track.name + track.date.uts}\n                            selected={this.selectedArtist}\n                            selectedID={this.selectedArtistID}\n                            time={track.date.uts}\n                            unixTimestamp={this.unixTimestamp}\n                        />\n                    )\n                } else {\n                    recents.push(\n                        <Recent\n                            track={track.name}\n                            artistID={track.artist.mbid}\n                            artist={track.artist[\"#text\"]}\n                            playcount={track.playcount}\n                            url={track.url}\n                            key={track.name + track.time}\n                            selected={this.selectedArtist}\n                            selectedID={this.selectedArtistID}\n                            time=\"now playing\"\n                            unixTimestamp={this.unixTimestamp}\n                        />\n                    )\n                }\n            })\n        }\n\n        return (\n            <div className=\"container container--music\">\n                <Helmet>\n                    <title>music &ndash; bysimeon</title>\n                </Helmet>\n                <h1 className=\"medmedtext medmedtext--music\"> listened to: </h1>\n                {this.state.userInfo && (\n                    <p className=\"notsmalltext notsmalltext--music\">\n                        i've been tracking the music i listen to since 2015.\n                        since then i've listened to around{\" \"}\n                        {this.state.userInfo.user.playcount\n                            .toString()\n                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}{\" \"}\n                        songs, all tracked through{\" \"}\n                        <a href={this.state.userInfo.user.url}> last.fm </a>.\n                        here's a breakdown of what i've been listening to for\n                        the past{\" \"}\n                        <select\n                            value={this.state.timespan}\n                            onChange={this.updateTimespan}\n                            className=\"dropdown dropdown--music\"\n                        >\n                            <option>7</option>\n                            <option>30</option>\n                            <option>90</option>\n                            <option>180</option>\n                            <option>365</option>\n                            <option>???</option>\n                        </select>{\" \"}\n                        days\n                    </p>\n                )}\n                <div className=\"music\">\n                    <div className=\"artists music__column\">\n                        <div className=\"music__column__item\">\n                            <div className=\"music__column__item__title\">\n                                top artists\n                            </div>\n                            <div className=\"music__column__item__plays\">\n                                plays\n                            </div>\n                        </div>\n                        {artists}\n                    </div>\n                    <div className=\"albums music__column\">\n                        <div className=\"music__column__item\">\n                            <div className=\"music__column__item__title\">\n                                top albums\n                            </div>\n                            <div className=\"music__column__item__plays\">\n                                plays\n                            </div>\n                        </div>\n                        {albums}\n                    </div>\n                    <div className=\"songs music__column\">\n                        <div className=\"music__column__item\">\n                            <div className=\"music__column__item__title\">\n                                top tracks\n                            </div>\n                            <div className=\"music__column__item__plays\">\n                                plays\n                            </div>\n                        </div>\n                        {tracks}\n                    </div>\n                </div>\n                <div className=\"music music--recent\">\n                    <div className=\"songs music__column music__column--recent\">\n                        <div className=\"music__column__item\">\n                            <div className=\"music__column__item__title\">\n                                recently played\n                            </div>\n                            <div className=\"music__column__item__plays\">\n                                {\" \"}\n                                when\n                            </div>\n                        </div>\n                        {recents}\n                    </div>\n                    {this.state.topArtists &&\n                        this.state.topAlbums &&\n                        this.state.topTracks && (\n                            <div className=\"songs music__column music__column--recent\">\n                                <div className=\"music__column__item\">\n                                    {this.state.timespan} day total\n                                </div>\n                                <div className=\"music__column__item\">\n                                    <div className=\"music__column__item__title\">\n                                        unique artists\n                                    </div>\n                                    <div className=\"music__column__item__plays\">\n                                        {\n                                            this.state.topArtists.topartists[\n                                                \"@attr\"\n                                            ].total\n                                        }\n                                    </div>\n                                </div>\n                                <div className=\"music__column__item\">\n                                    <div className=\"music__column__item__title\">\n                                        unique albums\n                                    </div>\n                                    <div className=\"music__column__item__plays\">\n                                        {\n                                            this.state.topAlbums.topalbums[\n                                                \"@attr\"\n                                            ].total\n                                        }\n                                    </div>\n                                </div>\n                                <div className=\"music__column__item\">\n                                    <div className=\"music__column__item__title\">\n                                        unique tracks\n                                    </div>\n                                    <div className=\"music__column__item__plays\">\n                                        {\n                                            this.state.topTracks.toptracks[\n                                                \"@attr\"\n                                            ].total\n                                        }\n                                    </div>\n                                </div>\n                                {/* <div className=\"music__column__item\">\n                                    <div className=\"music__column__item__title\">\n                                        tracks played\n                                    </div>\n                                    <div className=\"music__column__item__plays\">\n                                        {trackplays}\n                                    </div>\n                                </div> */}\n                            </div>\n                        )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Music\n","import React, { Component } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport \"./style.scss\"\n\nclass Else extends Component {\n    render() {\n        return (\n            <div className=\"container container--home\">\n                <Helmet>\n                    <title>else &ndash; bysimeon</title>\n                </Helmet>\n                <div className=\"bigbigtext\">\n                    <span>huh</span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Else\n","import React, { Component } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport \"./style.scss\"\n\nclass Error extends Component {\n    render() {\n        return (\n            <div className=\"container container--home\">\n                <Helmet>\n                    <title>404 &ndash; bysimeon</title>\n                </Helmet>\n                <div className=\"bigbigtext\">\n                    <span>404</span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Error\n","import React, { Component } from \"react\"\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\"\nimport { NavLink } from \"react-router-dom\"\nimport { Helmet } from \"react-helmet\";\nimport \"./app.scss\"\n\nimport NowListening from \"./components/nowListening\"\nimport StyleSwitcher from \"./components/styleSwitcher\"\nimport colorSchemes from \"./data/colorSchemes.json\"\n\nimport Home from \"./components/home\"\nimport About from \"./components/about\"\nimport Work from \"./components/work\"\nimport Shop from \"./components/shop\"\nimport Start from \"./components/start\"\nimport Music from \"./components/music\"\nimport Else from \"./components/else\"\nimport Error from \"./components/error\"\n\nconst routeHome = () => <Home />\nconst routeAbout = () => <About />\nconst routeWork = () => <Work />\nconst routeShop = () => <Shop />\nconst routeStart = () => <Start />\nconst routeMusic = () => <Music />\nconst routeError = () => <Error />\nconst routeElse = () => <Else />\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            colorMode: 1,\n            textColor: \"#000\",\n            backgroundColor: \"#fff\"\n        }\n    }\n\n    changeStyles() {\n        let colorMode = this.state.colorMode\n        this.setState({\n            textColor:\n                colorSchemes.themes[colorMode % colorSchemes.themes.length]\n                    .textColor,\n            backgroundColor:\n                colorSchemes.themes[colorMode % colorSchemes.themes.length]\n                    .backgroundColor,\n            colorMode: colorMode + 1\n        })\n    }\n\n    render() {\n        const selectedStyle = {\n            background: this.state.backgroundColor,\n            color: this.state.textColor\n        }\n\n        return (\n            <Router>\n                <div className=\"App\" style={selectedStyle}>\n                    <div className=\"top\">\n                        <div className=\"corner\">\n                            <StyleSwitcher\n                                changeStyles={this.changeStyles.bind(this)}\n                            />\n                        </div>\n                        <div className=\"corner\">\n                            <NavLink\n                                exact\n                                to=\"/\"\n                                activeClassName=\"current-page\"\n                            >\n                                {\" \"}\n                                home{\" \"}\n                            </NavLink>\n                            <NavLink\n                                to=\"/about/\"\n                                activeClassName=\"current-page\"\n                            >\n                                {\" \"}\n                                about\n                            </NavLink>\n                            <NavLink to=\"/work/\" activeClassName=\"current-page\">\n                                {\" \"}\n                                work{\" \"}\n                            </NavLink>\n                            <NavLink\n                                to=\"/music/\"\n                                activeClassName=\"current-page\"\n                            >\n                                {\" \"}\n                                music\n                            </NavLink>\n                            {/* <NavLink to=\"/shop/\" activeClassName=\"current-page\">\n                                {\" \"}\n                                shop\n                            </NavLink> */}\n                            {/* <NavLink to=\"/else/\" activeClassName=\"current-page\">\n                                {\" \"}\n                                else\n                            </NavLink> */}\n                        </div>\n                    </div>\n                    <div className=\"bottom\">\n                        <NowListening />\n                        <div className=\"corner\">\n                            <Link to=\"/start/\">***</Link>\n                        </div>\n                    </div>\n                    <Switch>\n                        <Route exact path=\"/\" component={routeHome} />\n                        <Route path=\"/about/\" component={routeAbout} />\n                        <Route path=\"/work/\" component={routeWork} />\n                        <Route path=\"/shop/\" component={routeShop} />\n                        <Route path=\"/start/\" component={routeStart} />\n                        <Route path=\"/music/\" component={routeMusic} />\n                        <Route path=\"/else/\" component={routeElse} />\n                        <Route component={routeError} />\n                    </Switch>\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}